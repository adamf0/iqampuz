@use "sass:math";
$grid-columns: 12;
$grid-gaps: (
	"0": 0,
	"1": 4px,
	"2": 8px,
	"3": 16px,
	"4": 24px,
);
$layout-values: flex-start, flex-end, center, space-between, space-around;
$display-values: none, block, flex, inline, inline-flex, inline-block;

.center-vertical {
	align-items: center;
}

// base layout classes
.container {
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
	padding: 0 24px;
	box-sizing: border-box;
}

.container-fluid {
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
	padding: 0 8px;
	box-sizing: border-box;
}

.row {
	display: flex;
	flex-flow: row wrap;
}

.col {
	flex: auto;
}

@for $i from 1 through $grid-columns {
	.col-#{$i} {
		box-sizing: border-box;
		flex-grow: 0;
		width: math.div($i * 100%, $grid-columns);
	}
}

// grid gaps
@each $key, $val in $grid-gaps {
	.gap-#{$key} > * {
		padding: $val;
	}
	.gap-#{$key} {
		margin-left: -$val;
		margin-right: -$val;
	}
}

// justify content classes
@each $val in $layout-values {
	.justify-#{$val} {
		justify-content: $val;
	}
}

// col classes
@include xs {
	@for $i from 1 through $grid-columns {
		.col-xs-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include sm {
	@for $i from 1 through $grid-columns {
		.col-sm-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include md {
	@for $i from 1 through $grid-columns {
		.col-md-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include lg {
	@for $i from 1 through $grid-columns {
		.col-lg-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include xl {
	@for $i from 1 through $grid-columns {
		.col-xl-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

// display responsive classes

@each $val in $display-values {
	.display-#{$val} {
		display: $val;
	}
}

@include xs {
	@each $val in $display-values {
		.display-xs-#{$val} {
			display: $val;
		}
	}
}

@include sm {
	@each $val in $display-values {
		.display-sm-#{$val} {
			display: $val;
		}
	}
}

@include md {
	@each $val in $display-values {
		.display-md-#{$val} {
			display: $val;
		}
	}
}

@include lg {
	@each $val in $display-values {
		.display-lg-#{$val} {
			display: $val;
		}
	}
}

@include xl {
	@each $val in $display-values {
		.display-xl-#{$val} {
			display: $val;
		}
	}
}
